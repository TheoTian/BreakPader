apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

def siteUrl = 'https://github.com/TheoTian/BreakPader'    // project homepage
def gitUrl = 'https://github.com/TheoTian/BreakPader.git' // project git
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

def aarName = 'BreakPader'

//配置参数
version = "1.0.0"
group = "com.theo.breakpader"

android {
    compileSdkVersion 25
    buildToolsVersion "26.0.1"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            ndkBuild {
                arguments 'APP_STL=gnustl_static',
                        'APP_PLATFORM=android-14',
                        'NDK_TOOLCHAIN_VERSION=4.9'
                cppFlags '-frtti',
                        '-fexceptions',
                        '-std=gnu++11',
                        '-Wno-format-contains-nul',
                        '-g',
                        '-Wno-deprecated-declarations',
                        '-fpermissive'
            }
        }
        ndk {
            abiFilters 'armeabi-v7a'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        ndkBuild {
            path 'src/main/jni/Android.mk'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}


bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    pkg {
        repo = 'theolibs'//自己创建的仓库名字
        name = 'BreakPader'//上传到JCenter的名字,最终引用的名字
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ['Apache-2.0']//不能随便写，只能是仓库创建时选择的license type
        publish = true // 是否是公开项目，公开别人可以引用

        version {
            name = '1.0.0'
            desc = 'BreakPader Library'//描述，自己定义
            released  = new Date()
            vcsTag = 'v1.0.0'
            //attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
        }
    }
    configurations = ['archives']
}

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                // Add your description here
                name 'BreakPader For Android'
                description 'BreakPader Library'
                url siteUrl
                // Set your license
                licenses {
                    license {
                        name 'Apache-2.0' //和之前自己定义的协议一致
                        url 'https://raw.githubusercontent.com/TheoTian/BreakPader/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id 'ttheo'        //填写bintray或者github的用户名
                        name 'theotian'         //姓名
                        email 'tianxiya1@gmail.com'//邮箱
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    failOnError false //必须添加以免出错
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

javadoc {
    options{
        //如果你的项目里面有中文注释的话，必须将格式设置为UTF-8，不然会出现乱码
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        links "http://docs.oracle.com/javase/7/docs/api"
    }
}